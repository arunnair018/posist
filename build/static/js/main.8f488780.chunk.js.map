{"version":3,"sources":["componnets/auth/login.js","componnets/auth/register.js","componnets/auth/index.js","componnets/channels/index.js","componnets/channels/createModal.js","componnets/messages/index.js","componnets/home/nav.js","componnets/home/index.js","componnets/dashboard/index.js","utils/privateroutes.js","utils/publicroutes.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","region","errors","redirect","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","data","toLocaleLowerCase","axios","post","then","res","cookie","set","token","username","_id","catch","response","error","console","log","this","to","className","onSubmit","type","placeholder","onChange","Component","Register","props","login","err","confirmPassword","required","Auth","changeScope","changeLogin","x","href","onClick","staw","Channel","show","showModal","hideModal","style","fontSize","setscope","channels","map","item","key","name","Modal","description","tags","invites","get","users","user","names","split","Axios","headers","Authorization","addInvites","innerHTML","disabled","class","Message","message","load","currmsg","fetchData","scope","reverse","channel","prevProps","index","border","float","Nav","search","modal","closeModal","openModal","logout","remove","searchpost","query","Home","setScope","scop","Dashboard","startDate","Date","endDate","topChannels","topRegion","topTags","topUser","d1","d2","toString","parse","handleStart","date","handleEnd","selected","onSelect","channelname","count","tag","PrivateRoute","component","rest","render","PublicRoute","restricted","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f488780.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    region: \"\",\r\n    errors: {},\r\n    redirect: false,\r\n  };\r\n\r\n  // function to change state when an event is happened\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      region: this.state.region.toLocaleLowerCase(),\r\n    };\r\n    // axiosfunction to make API call\r\n    axios\r\n      .post(`/login`, data)\r\n      .then((res) => {\r\n        // when API call succeed set cookies\r\n        cookie.set(\"token\", res.data.token);\r\n        cookie.set(\"region\", res.data.region);\r\n        cookie.set(\"username\", res.data.username);\r\n        cookie.set(\"id\", res.data._id);\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch((res) => {\r\n        // API call not succeed set error to display\r\n        if (!res.response) {\r\n          this.setState({\r\n            errors: {\r\n              error: \"Network Error\",\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({ errors: res.response.data });\r\n        }\r\n        console.log(this.state);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const errors = this.state.errors;\r\n    const redirect = this.state.redirect;\r\n    if (redirect) {\r\n      return <Redirect to='/home' />;\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h3>Log In</h3>\r\n            <hr />\r\n            <div className='form-group'>\r\n              <input\r\n                type='email'\r\n                className='form-control'\r\n                placeholder='Enter email'\r\n                id='email'\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Enter password'\r\n                id='password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Enter Region'\r\n                id='region'\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button type='submit' className='btn btn-primary'>\r\n              Submit\r\n            </button>\r\n            <center>\r\n              {errors ? (\r\n                <span className='error red-text text-darken-2'>\r\n                  {errors.error}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </center>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    region: \"\",\r\n    errors: \"\",\r\n    redirect: false,\r\n  };\r\n\r\n  // function to change state when an event is happened\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // function to submit the form\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // prevents default working of function\r\n    // form the body of request\r\n    const data = {\r\n      username: this.state.username,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      region: this.state.region,\r\n    };\r\n    // axiosfunction to make API call\r\n    axios\r\n      .post(`/users`, data)\r\n      .then((res) => {\r\n        this.props.login(\"1\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // API call not succeed set error to display\r\n        this.setState({ errors: \"error submitting\" });\r\n      });\r\n  };\r\n\r\n  // check for password matching\r\n  confirmPassword = (e) => {\r\n    if (e.target.value !== this.state.password) {\r\n      this.setState({\r\n        errors: \"Passwords not matching.\",\r\n      });\r\n    } else {\r\n      this.setState({ errors: \"\" });\r\n    }\r\n  };\r\n\r\n  // render the jsx with proper data\r\n  render() {\r\n    const errors = this.state.errors;\r\n    return (\r\n      <div>\r\n        <div className='container'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h3>Register</h3>\r\n            <hr />\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Enter username'\r\n                id='username'\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='email'\r\n                className='form-control'\r\n                placeholder='Enter email'\r\n                id='email'\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Enter password'\r\n                id='password'\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='password'\r\n                className='form-control'\r\n                placeholder='Confirm password'\r\n                id='confirm_password'\r\n                onChange={this.confirmPassword}\r\n                required\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Enter Region'\r\n                id='region'\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button type='submit' className='btn btn-primary'>\r\n              Submit\r\n            </button>\r\n            {errors ? (\r\n              <center>\r\n                <span className='error'>{errors}</span>\r\n              </center>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    login: \"1\",\r\n  };\r\n\r\n  changeScope = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      login: e.target.id,\r\n    });\r\n  };\r\n\r\n  changeLogin = (x) => {\r\n    this.setState({\r\n      login: x,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <nav>\r\n          <div className='nav-wrapper'>\r\n            <a href='/' className='brand-logo left'>\r\n              Messenger\r\n            </a>\r\n            <ul className='nav-ul right' id='nav-mobile'>\r\n              <li className='nav-li'>\r\n                <a href='#' id='1' onClick={this.changeScope}>\r\n                  Login\r\n                </a>\r\n              </li>\r\n              <li className='nav-li'>\r\n                <a href='#' id='0' onClick={this.changeScope}>\r\n                  Register\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        {this.state.login === \"0\" ? (\r\n          <Register staw={this.state.login} login={this.changeLogin} />\r\n        ) : (\r\n          <Login staw={this.state.login} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nclass Channel extends Component {\r\n  state = { show: false, redirect: false };\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false, redirect: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/' />;\r\n    }\r\n    return (\r\n      <main>\r\n        \r\n        <div className='header-channel'>\r\n          <span style={{ fontSize: \"25px\" }}>Channels</span>\r\n          <button\r\n            type='button'\r\n            onClick={()=>{this.props.setscope(\"modal\")}}\r\n            className='btn right'\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <hr />\r\n        <div className='channel-list'>\r\n          {this.props.channels.map((item) => {\r\n            return (\r\n              <button \r\n              className='channel-button waves-effect' \r\n              key={item._id} \r\n              onClick={(e)=>{this.props.setscope(item._id)}}>\r\n                {item.name}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default Channel;\r\n","import React, { Component } from \"react\";\r\nimport cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    name: \"\",\r\n    description: \"\",\r\n    tags: \"\",\r\n    invites: [cookie.get(\"id\")],\r\n    users: this.props.user,\r\n    names: [],\r\n    redirect: false,\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      tags: this.state.tags.split(\" \"),\r\n      invites: this.state.invites,\r\n    };\r\n    const token = cookie.get(\"token\");\r\n    Axios.post(\"/channel\", data, {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addInvites = (e) => {\r\n    e.preventDefault();\r\n    let id = e.target.id;\r\n    let name = e.target.innerHTML;\r\n    this.setState({\r\n      invites: [...this.state.invites, id],\r\n      names: [...this.state.names, name],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const users = this.props.users;\r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/' />;\r\n    }\r\n    return (\r\n      <div className='container'>\r\n        <h3>Create a new channel</h3>\r\n        <section className='modal-main'>\r\n          <div className=' modainer'>\r\n            <div className='row'>\r\n              <form className='col- 12'>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='Channel Name'\r\n                    id='name'\r\n                    type='text'\r\n                    className='validate'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className='input-field col s6'>\r\n                  <input\r\n                    placeholder='tags (seperate by space)'\r\n                    id='tags'\r\n                    type='text'\r\n                    className='validate'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className='input-field col s12'>\r\n                  <input\r\n                    placeholder='Description'\r\n                    id='description'\r\n                    type='text'\r\n                    className='validate'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className='input-field col s12'>\r\n                  <input\r\n                    placeholder='invites'\r\n                    id='invites'\r\n                    type='text'\r\n                    className='validate'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.names}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div class='invites-list'>\r\n                  {users.map((item) => {\r\n                    if (item.username === cookie.get(\"username\")) {\r\n                      return \"\";\r\n                    }\r\n                    return (\r\n                      <button\r\n                        onClick={this.addInvites}\r\n                        id={item._id}\r\n                        key={item._id}\r\n                        value={item}\r\n                        className='invites'\r\n                      >\r\n                        {item.username}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <button\r\n              className='btn waves-effect waves-light right'\r\n              type='submit'\r\n              name='action'\r\n              onClick={this.handleSubmit}\r\n            >\r\n              CREATE\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport cookie from \"js-cookie\";\r\nimport Modal from \"../channels/createModal\";\r\n\r\nclass Message extends Component {\r\n  state = {\r\n    message: [],\r\n    load: false,\r\n    currmsg: \"\",\r\n  };\r\n\r\n  fetchData = () => {\r\n    if (this.props.scope === \"modal\") {\r\n      this.setState({\r\n        load: true,\r\n      });\r\n    } else {\r\n      let token = cookie.get(\"token\");\r\n      Axios.get(`/message/${this.props.scope}`, {\r\n        headers: {\r\n          Authorization: `Basic ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.setState({\r\n            message: res.data.reverse(),\r\n            load: true,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  showModal() {\r\n    this.setState({ load: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.scope !== prevProps.scope) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      currmsg: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let token = cookie.get(\"token\");\r\n    let channel = this.props.scope;\r\n    let data = {\r\n      username: cookie.get(\"username\"),\r\n      channel: channel,\r\n      message: this.state.currmsg,\r\n    };\r\n    this.setState({\r\n      message: [data, ...this.state.message],\r\n      currmsg: \"\",\r\n    });\r\n    Axios.post(\"/message\", data, {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        this.setState({ load: true });\r\n        console.log(this.state.message);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.scope);\r\n    if (!this.state.load) {\r\n      return <center>\"Select a channel to display messages\"</center>;\r\n    }\r\n    if (this.props.scope === \"modal\") {\r\n      return <Modal users={this.props.users} />;\r\n    }\r\n    return (\r\n      <div className='row'>\r\n        <form className='col s12' onSubmit={this.handleSubmit}>\r\n          <div className='row'>\r\n            <div className='input-field col s10'>\r\n              <input\r\n                placeholder='Message'\r\n                type='text'\r\n                onChange={this.handleChange}\r\n                value={this.state.currmsg}\r\n              />\r\n            </div>\r\n            <div className='input-field col s2'>\r\n              <button type='submit' className='waves-effect waves-light btn'>\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className='row msg'>\r\n          {this.state.message.map((item, index) => {\r\n            let border =\r\n              cookie.get(\"username\") === item.username\r\n                ? \"border-green\"\r\n                : \"border-red\";\r\n            let float =\r\n              cookie.get(\"username\") === item.username ? \"right\" : \"left\";\r\n            return (\r\n              <div class='col s12'>\r\n                <p\r\n                  className={`waves-effect waves-teal btn-flat ${border}`}\r\n                  key={index}\r\n                >\r\n                  <span className={`messenger ${float}`}>{item.username}</span>\r\n                  <span>{item.message}</span>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState, Component } from \"react\";\r\nimport cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    search: \"\",\r\n    modal: \"\",\r\n    data: [],\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      modal: \"\",\r\n    });\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({\r\n      modal: \"open-modal\",\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    cookie.remove(\"token\");\r\n    cookie.remove(\"username\");\r\n    cookie.remove(\"region\");\r\n  };\r\n\r\n  searchpost = () => {\r\n    let data = { query: this.state.search };\r\n    Axios.post(\"/search\", data)\r\n      .then((res) => {\r\n        this.setState({\r\n          data: res.data,\r\n        });\r\n        this.openModal();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='nav-fixed'>\r\n          <nav>\r\n            <div className='nav-wrapper'>\r\n              <a href='/' className='brand-logo'>\r\n                Messenger\r\n              </a>\r\n              <ul id='nav-mobile' className='right logout'>\r\n                <li>\r\n                  <form>\r\n                    <div className='row search-row'>\r\n                      <div className='input-field col s8'>\r\n                        <input\r\n                          placeholder='Enter Keyword to search post'\r\n                          id='first_name'\r\n                          type='text'\r\n                          className='validate search'\r\n                          onChange={(e) =>\r\n                            this.setState({ search: e.target.value })\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className='input-field col s4'>\r\n                        <a className='btn' onClick={this.searchpost}>\r\n                          Search\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </li>\r\n                <li>\r\n                  <a href='/'>Home</a>\r\n                </li>\r\n                <li>\r\n                  <a href='/dashboard'>Dashboard</a>\r\n                </li>\r\n                <li>\r\n                  <a href='#' onClick={this.logout}>\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div>\r\n          <div id='myModal' class={`modal ${this.state.modal}`}>\r\n            <div className='modal-content'>\r\n              <span className='close' onClick={this.closeModal}>\r\n                &times;\r\n              </span>\r\n              <div>\r\n                {this.state.data.map((item, index) => {\r\n                  return (\r\n                    <div class='searches' key={index}>\r\n                      <p>{item.username}</p>\r\n                      <p>{item.message}</p>\r\n                      <hr />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport cookie from \"js-cookie\";\r\nimport { Redirect } from \"react-router\";\r\nimport Axios from \"axios\";\r\nimport Channel from \"../channels\";\r\nimport Message from \"../messages\";\r\nimport Nav from \"./nav\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    redirect: false,\r\n    users: [],\r\n    channels: [],\r\n    scope: \"\",\r\n    load: false,\r\n  };\r\n\r\n  setScope = (scop) => {\r\n    this.setState({\r\n      scope: scop,\r\n      load: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = cookie.get(\"token\");\r\n    Axios.get(\"/users\", {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        this.setState({\r\n          users: res.data,\r\n        });\r\n        Axios.get(\"/channel\", {\r\n          headers: {\r\n            Authorization: `Basic ${token}`,\r\n          },\r\n        })\r\n          .then((res) => {\r\n            this.setState({\r\n              channels: res.data,\r\n              load: true,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/' />;\r\n    }\r\n    if (!this.state.load) {\r\n      return <center>loading...</center>;\r\n    }\r\n    return (\r\n      <div className='home'>\r\n        <Nav />\r\n        <div className='row nonav'>\r\n          <div className='col s3'>\r\n            <Channel channels={this.state.channels} setscope={this.setScope} />\r\n          </div>\r\n          <div className='col s9'>\r\n            <div>\r\n              <Message scope={this.state.scope} users={this.state.users} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Nav from \"../home/nav\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    topChannels: [],\r\n    topRegion: [],\r\n    topTags: [],\r\n    topUser: [],\r\n  };\r\n\r\n  fetchData = () => {\r\n    let data = {\r\n      d1: this.state.startDate,\r\n      d2: this.state.endDate,\r\n    };\r\n    if (data.d1.toString() === data.d2.toString()) {\r\n      data.d1 = new Date(Date.parse(\"2020-01-01T00:00:00.000Z\"));\r\n    }\r\n    console.log(data);\r\n    Axios.post(\"/metrics\", data)\r\n      .then((res) => {\r\n        this.setState({\r\n          topChannels: res.data.topChannels,\r\n          topRegion: res.data.topRegion,\r\n          topTags: res.data.topTags,\r\n          topUser: res.data.topUser,\r\n          load: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleStart = (date) => {\r\n    this.setState({ startDate: date });\r\n  };\r\n  handleEnd = (date) => {\r\n    this.setState({ endDate: date });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <center>\r\n          <div className='date'>\r\n            <span className='d'>\r\n              Start Date: &nbsp;&nbsp;&nbsp;\r\n              <DatePicker\r\n                selected={this.state.startDate}\r\n                onSelect={this.handleStart}\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className='date'>\r\n            <span className='d'>\r\n              End Date: &nbsp;&nbsp;&nbsp;\r\n              <DatePicker\r\n                selected={this.state.endDate}\r\n                onSelect={this.handleEnd}\r\n              />\r\n            </span>\r\n          </div>\r\n          <a className='waves-effect waves-light btn' onClick={this.fetchData}>\r\n            Update\r\n          </a>\r\n        </center>\r\n        <hr />\r\n        <div>\r\n          <center>\r\n            <div className='row'>\r\n              <div className='col s3'>\r\n                Top Channels\r\n                <hr />\r\n                <div className='row'>\r\n                  <div className='col s8'>Channel Name</div>\r\n                  <div className='col s4'>Post Count</div>\r\n                </div>\r\n                <hr />\r\n                {this.state.topChannels.map((item, index) => {\r\n                  return (\r\n                    <div className='row' key={index}>\r\n                      <div className='col s8'>{item.channelname}</div>\r\n                      <div className='col s4'>{item.count}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className='col s3'>\r\n                Top Users\r\n                <hr />\r\n                <div className='row'>\r\n                  <div className='col s8'>User Name</div>\r\n                  <div className='col s4'>Post Count</div>\r\n                </div>\r\n                <hr />\r\n                {this.state.topUser.map((item, index) => {\r\n                  return (\r\n                    <div className='row' key={index}>\r\n                      <div className='col s8'>{item.username}</div>\r\n                      <div className='col s4'>{item.count}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className='col s3'>\r\n                Top Tags\r\n                <hr />\r\n                <div className='row'>\r\n                  <div className='col s8'>Tag Name</div>\r\n                  <div className='col s4'>Channel Count</div>\r\n                </div>\r\n                <hr />\r\n                {this.state.topTags.map((item, index) => {\r\n                  return (\r\n                    <div className='row' key={index}>\r\n                      <div className='col s8'>{item.tag}</div>\r\n                      <div className='col s4'>{item.count}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className='col s3'>\r\n                Top Regions\r\n                <hr />\r\n                <div className='row'>\r\n                  <div className='col s8'>Region Name</div>\r\n                  <div className='col s4'>User Count</div>\r\n                </div>\r\n                <hr />\r\n                {this.state.topRegion.map((item, index) => {\r\n                  return (\r\n                    <div className='row' key={index}>\r\n                      <div className='col s8'>{item.region}</div>\r\n                      <div className='col s4'>{item.count}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","// import required modules\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport cookie from \"js-cookie\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component, // component passed as props\r\n  ...rest // spread other route props\r\n}) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        cookie.get(\"token\") ? ( // if cookie present\r\n          <Component {...props} /> //load components with required props\r\n        ) : (\r\n          <Redirect to='/' />\r\n        )\r\n      }\r\n    />\r\n  ); //redirect to \"/\"\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport cookie from \"js-cookie\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component, // component as props\r\n  restricted, // restricted props if true component becomes restricted\r\n  ...rest // default props of route\r\n}) => {\r\n  return (\r\n    // restricted = false meaning public route\r\n    // restricted = true meaning restricted route\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        cookie.get(\"token\") ? ( // if cookie present\r\n          <Redirect to='/home' /> // redirect to dashboard\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  ); // load the component\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Auth from \"./componnets/auth\";\nimport Home from \"./componnets/home\";\nimport Dashboard from \"./componnets/dashboard\";\nimport PrivateRoute from \"./utils/privateroutes\";\nimport PublicRoute from \"./utils/publicroutes\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <Switch>\n          <PublicRoute exact path='/' component={Auth} />\n          <PrivateRoute path='/home' component={Home} />\n          <PrivateRoute path='/dashboard' component={Dashboard} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}